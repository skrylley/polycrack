name: Build

on:
  push:
    branches:
      - main  # Specificați aici ramura pe care doriți să declanșați acțiunea

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install kivy requests beautifulsoup4 selenium pyopenssl
          sudo apt update
          
          sudo apt install git zip unzip openjdk-17-jdk autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
          pip install buildozer Cython==0.29.33
          buildozer init
      - name: Install AIDL
        run: |
          sudo apt-get update
          sudo apt-get install -y aidl
      - name: Ensure sdkmanager is available
        run: |
          echo 'export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/bin' >> $GITHUB_ENV
          echo 'export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools' >> $GITHUB_ENV

      - name: Accept Android SDK Licenses
        run: yes | sdkmanager --licenses

      - name: Set up Android SDK
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O android-sdk-tools.zip
          mkdir android-sdk
          unzip -d android-sdk android-sdk-tools.zip
          echo 'export ANDROID_SDK_ROOT=$PWD/android-sdk' >> $GITHUB_ENV
          
      - name: Build with Buildozer
        run: |
          buildozer -v android debug  # Comandă pentru a construi aplicația Android folosind Buildozer

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: downloads  # Schimbă aici calea către directorul în care se află fișierul APK generat
